# Populate a CMake variable with the sources
set(CMAKE_INCLUDE_CURRENT_DIR ON)

# set(PROJECT_NAME "skribisto-contracts")
project(skribisto-contracts LANGUAGES CXX VERSION ${VERSION})

find_package(QT NAMES Qt6 COMPONENTS Core Sql CONFIG REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Core Sql CONFIG REQUIRED)

set(contracts_SRCS

    contracts_global.h
    exception.h
    automapper/automapper.h
    automapper/automapper.cpp
    error.h
    wait_in_event_loop.h
    result.h
    types.h

    # database:
    database/interface_database_table.h
    database/interface_foreign_entity.h
    database/interface_database_context.h

    # persistence:
    persistence/interface_generic_repository.h
    persistence/interface_repository.h
    persistence/interface_repository_provider.h

    # infrastructure:
    infrastructure/skrib/interface_skrib_loader.h
)

# Read the file generated by the Python script
file(READ "repositories.txt" repositories_files)

# Convert the new-line separated paths into a CMake list
string(REPLACE "\n" ";" repositories_files "${repositories_files}")

add_library(skribisto-contracts SHARED ${contracts_SRCS} ${repositories_files}
    automapper/automapper.cpp)


#qt6_add_qml_module(skribisto-contracts
#  URI Contracts.DTO.Author
#  VERSION 1.0
#  SOURCES
#  # author:
#)


target_include_directories(skribisto-contracts PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}")

target_compile_definitions(skribisto-contracts PUBLIC SKRIBISTO_CONTRACTS_LIBRARY)

add_dependencies(skribisto-contracts skribisto-domain)
# DTOs
add_dependencies(skribisto-contracts skribisto-contracts-dto-system)
add_dependencies(skribisto-contracts skribisto-contracts-dto-chapter)
add_dependencies(skribisto-contracts skribisto-contracts-dto-scene-paragraph)
add_dependencies(skribisto-contracts skribisto-contracts-dto-scene)
add_dependencies(skribisto-contracts skribisto-contracts-dto-author)



target_link_libraries(skribisto-contracts PUBLIC skribisto-domain)
# DTOs
target_link_libraries(skribisto-contracts PUBLIC skribisto-contracts-dto-system)
target_link_libraries(skribisto-contracts PUBLIC skribisto-contracts-dto-author)
target_link_libraries(skribisto-contracts PUBLIC skribisto-contracts-dto-scene-paragraph)
target_link_libraries(skribisto-contracts PUBLIC skribisto-contracts-dto-scene)
target_link_libraries(skribisto-contracts PUBLIC skribisto-contracts-dto-chapter)

target_link_libraries(skribisto-contracts PRIVATE Qt${QT_VERSION_MAJOR}::Core Qt${QT_VERSION_MAJOR}::Sql)

# ---------------------------------
if(IOS)
    install(TARGETS skribisto-contracts LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
endif(IOS)

if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    install(TARGETS skribisto-contracts LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
endif(CMAKE_SYSTEM_NAME STREQUAL "Linux")

if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    install(TARGETS skribisto-contracts
        RUNTIME DESTINATION ${BINDIR}
        LIBRARY DESTINATION ${LIBDIR})
endif(CMAKE_SYSTEM_NAME STREQUAL "Windows")

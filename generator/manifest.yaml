---

global:
  application_name: Skribisto
  organisation:
    name: skribisto
    domain: skribisto.eu

entities:
  list:
    - name: Entity
      parent: EntityBase
      generate: true
      fields:
        - type: QUuid
          name: uuid
        - type: QDateTime
          name: creationDate
        - type: QDateTime
          name: updateDate
    - name: SceneParagraph
      parent: Entity
      generate: true
      fields:
        - type: QString
          name: content
    - name: Scene
      parent: Entity
      generate: true
      fields:
        - type: QString
          name: title
        - type: QList<SceneParagraph>
          name: paragraphs
    - name: Chapter
      parent: Entity
      generate: true
      fields:
        - type: QString
          name: title
        - type: QList<Scene>
          name: scenes
    - name: Book
      parent: Entity
      generate: true
      fields:
        - type: QString
          name: title
        - type: QList<Chapter>
          name: chapters
    - name: Atelier
      parent: Entity
      generate: true
      fields:
        - type: QString
          name: name
        - type: QList<Book>
          name: books
    - name: Author
      parent: Entity
      generate: True
      fields:
        - type: QString
          name: name
    - name: DummyEntity
      parent: EntityBase
      generate: false
      fields:
        - type: QUuid
          name: uuid
        - type: QDateTime
          name: creationDate
    - name: DummyBasicEntity
      parent: DummyEntity
      generate: false
      fields:
        - type: QString
          name: name
        - type: QString
          name: author
    - name: DummyOtherEntity
      parent: DummyEntity
      generate: false
      fields:
        - type: QString
          name: name
    - name: DummyEntityWithForeign
      parent: DummyEntity
      generate: false
      fields:
        - type: QString
          name: name
        - type: QList<DummyOtherEntity>
          name: lists
        - type: DummyOtherEntity
          name: unique
  export: SKR_DOMAIN_EXPORT
  export_header_file: domain_global.h
  folder_path: ../sources/core/domain/
  list_file: ../sources/core/domain/entities.txt
  register_entity_base: true

repositories:
  list:
    - entity_name: Chapter
      generate: true
      lazy_loaders: true
    - entity_name: Book
      generate: true
      lazy_loaders: true
    - entity_name: Atelier
      generate: true
      lazy_loaders: true
    - entity_name: Author
      generate: true
      lazy_loaders: true
    - entity_name: Scene
      generate: true
      lazy_loaders: true
    - entity_name: SceneParagraph
      generate: true
      lazy_loaders: true

  interface_path: ../sources/core/contracts/persistence/
  interface_list_file: ../sources/core/contracts/repositories.txt
  export: SKR_PERSISTENCE_EXPORT
  export_header_file: persistence_global.h
  folder_path: ../sources/core/persistence/repositories/
  list_file: ../sources/core/persistence/repositories.txt

controller: 
  list_file: ../sources/core/presenter/controllers.txt
  folder_path: ../sources/core/presenter/
  export: SKR_PRESENTER_EXPORT
  export_header_file: presenter_global.h
  list:
    - name: Author
      generate: True
    - name: Book
      generate: True
    - name: Chapter
      generate: True
    - name: Scene
      generate: True
    - name: System
      generate: True

qml:
  mock_imports_folder_path: ../sources/gui/touch/mock_imports/
  real_imports_folder_path: ../sources/gui/touch/real_imports/


application:
  common_cmake_folder_path: ../sources/core/application
  features:
    - name: Author
      DTO:
        id_field: id
        dto_identical_to_entity:
          enabled: true
          generate: true
          entity_mappable_with: Author
      CRUD:
        enabled: true       
        entity_mappable_with: Author
        get:
          enabled: true
          generate: true
        get_all:
          enabled: true
          generate: true
        get_with_details:
          enabled: false
          generate: false
        create: 
          enabled: true
          generate: true
          undo: True
        remove: 
          enabled: true
          generate: true
          undo: True
        update: 
          enabled: true
          generate: true
          undo: True


    - name: Chapter
      DTO:
        id_field: id
        dto_identical_to_entity:
          enabled: true
          generate: true
          entity_mappable_with: Chapter
      CRUD:
        enabled: true
        entity_mappable_with: Chapter
        get:
          enabled: true
          generate: true
        get_all: 
          enabled: true
          generate: true
        get_with_details: 
          enabled: true
          generate: true
        create: 
          enabled: true
          generate: true
          undo: True
        remove: 
          enabled: true
          generate: true
          undo: True
        update: 
          enabled: true
          generate: true
          undo: True
      commands:
        - name: MoveChapter
          generate: true
          entities:
            - Book
            - Chapter
          validator: 
            enabled: True
            generate: True
          undo: True
          dto:
            in:
              type_prefix: MoveChapter
              generate: True
              fields:
                - type: int
                  name: originBookId
                - type: int
                  name: targetedSceneId
                - type: int
                  name: destinationBookId
                - type: int
                  name: scenePositionAtDestination
            out:
              type_prefix: MoveChapterReply
              generate: True
              fields:
                - type: int
                  name: originBookId
                - type: int
                  name: targetedChapterId
                - type: int
                  name: scenePositionAtOrigin
                - type: int
                  name: destinationChapterId
                - type: int
                  name: scenePositionAtDestination

    - name: Scene
      DTO:
        id_field: id
        dto_identical_to_entity:
          enabled: true
          generate: true
          entity_mappable_with: Scene
      CRUD:
        enabled: true
        entity_mappable_with: Scene
        get:
          enabled: true
          generate: true
        get_all: 
          enabled: true
          generate: true
        get_with_details: 
          enabled: true
          generate: true
        create: 
          enabled: true
          generate: true
          undo: True
        remove: 
          enabled: true
          generate: true
          undo: True
        update: 
          enabled: true
          generate: true
          undo: True
      commands:
        - name: MoveScene
          generate: true
          entities:
            - Chapter
            - Scene
          validator: 
            enabled: True
            generate: True
          undo: True
          dto:
            in:
              type_prefix: MoveScene
              generate: True
              fields:
                - type: int
                  name: origiChapterId
                - type: int
                  name: targetedSceneId
                - type: int
                  name: destinationChapterId
                - type: int
                  name: scenePositionAtDestination
            out:
              type_prefix: MoveSceneReply
              generate: True
              fields:
                - type: int
                  name: originChapterId
                - type: int
                  name: targetedSceneId
                - type: int
                  name: scenePositionAtOrigin
                - type: int
                  name: destinationChapterId
                - type: int
                  name: scenePositionAtDestination



    - name: SceneParagraph
      DTO:
        id_field: id
        dto_identical_to_entity:
          enabled: true
          generate: true
          entity_mappable_with: SceneParagraph
      CRUD:
        enabled: false

    - name: Writing
      DTO:
        id_field: id
        dto_identical_to_entity:
          enabled: false
      CRUD:
        enabled: false
      commands:
        - name: UpdateMultipleSceneParagraphs
          generate: true
          entities:
            - Scene
            - SceneParagraph
          validator:
            enabled: True
            generate: True
            check_if_exists: False
          undo: True
          dto:
            in:
              type_prefix: UpdateMultipleSceneParagraphs
              generate: True
              fields:
                - type: int
                  name: sceneId
                - type: int
                  name: parapgraphIndex
                - type: QList<int>
                  name: paragraphIdList
                - type: QList<QUuid>
                  name: paragraphUuidList
                - type: QList<QUuid>
                  name: uuidListToDelete
                - type: QList<QString>
                  name: texts
            out:
              type_prefix: MultipleSceneParagraphsChanged
              generate: True
              fields:
                - type: int
                  name: sceneId
                - type: int
                  name: parapgraphIndex
                - type: QList<int>
                  name: paragraphIdList
                - type: QList<QUuid>
                  name: paragraphUuidList
                - type: QList<QUuid>
                  name: uuidListToDelete
                - type: QList<QString>
                  name: texts
        - name: UpdateSceneParagraph
          generate: true
          entities:
            - Scene
            - SceneParagraph
          validator:
            enabled: True
            generate: True
            check_if_exists: False
          undo: True
          dto:
            in:
              type_prefix: UpdateSceneParagraph
              generate: True
              fields:
                - type: int
                  name: paragraphId
                - type: QUuid
                  name: paragraphUuid
                - type: QString
                  name: text
            out:
              type_prefix: SceneParagraphChanged
              generate: True
              fields:
                - type: int
                  name: paragraphId
                - type: QUuid
                  name: paragraphUuid
                - type: QString
                  name: text
      queries:
        - name: GetAllSceneParagraphs
          generate: true
          entities:
            - Scene
            - SceneParagraph
          validator:
            enabled: True
            generate: True
            check_if_exists: False
          dto:
            in:
              type_prefix: GetAllSceneParagraphs
              generate: True
              fields:
                - type: int
                  name: sceneId
            out:
              type_prefix: GetAllSceneParagraphsReply
              generate: True
              fields:
                - type: int
                  name: sceneId
                - type: QList<int>
                  name: paragraphIdList
                - type: QList<QUuid>
                  name: paragraphUuidList
                - type: QList<QString>
                  name: texts
        - name: GetSceneParagraph
          generate: true
          entities:
            - SceneParagraph
          validator:
            enabled: True
            generate: True
            check_if_exists: False
          dto:
            in:
              type_prefix: GetSceneParagraph
              generate: True
              fields:
                - type: int
                  name: paragraphId
            out:
              type_prefix: GetSceneParagraphReply
              generate: True
              fields:
                - type: int
                  name: paragraphId
                - type: QUuid
                  name: paragraphUuid
                - type: QString
                  name: text
        - name: GetSceneParagraphId
          generate: true
          entities:
            - SceneParagraph
          validator:
            enabled: True
            generate: True
            check_if_exists: False
          dto:
            in:
              type_prefix: GetSceneParagraphId
              generate: True
              fields:
                - type: QUuid
                  name: paragraphUuid
            out:
              type_prefix: GetSceneParagraphIdReply
              generate: True
              fields:
                - type: int
                  name: paragraphId
                - type: QUuid
                  name: paragraphUuid
    - name: System
      DTO:
        id_field: id
        dto_identical_to_entity:
          enabled: false
      CRUD:
        enabled: false
      commands:
        - name: SaveSystemAs
          generate: true
          validator: 
            enabled: True
            generate: True
            check_if_exists: False
          undo: False
          dto:
            in:
              type_prefix: SaveSystemAs
              generate: True
              fields:
                - type: QUrl
                  name: fileName
            out:
              is_void: true
        - name: LoadSystem
          generate: true
          validator:
            enabled: True
            generate: True
          undo: False
          dto:
            in:
              type_prefix: LoadSystem
              generate: True
              fields:
                - type: QUrl
                  name: fileName
            out:
              is_void: true
        - name: CloseSystem
          generate: true
          validator: 
            enabled: False
            generate: False
            check_if_exists: False
          undo: False
          dto:
            out:
              is_void: true

DTOs:
  common_cmake_folder_path: ../sources/core/contracts.dto

CQRS:
  common_cmake_folder_path: ../sources/core/contracts.cqrs

contracts:
  inverted_app_domain: eu.skribisto
  folder_path: ../sources/core/contracts
  export: SKR_CONTRACTS_EXPORT
  export_header_file: contracts_global.h

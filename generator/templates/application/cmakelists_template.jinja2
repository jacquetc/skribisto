find_package(Qt6 COMPONENTS Core  REQUIRED)

set(PROJECT_NAME {{ application_name }}-application-feature-{{ feature_spinal_name }})

set(SRC

    {% for file in files %}
    {{ file }}
    {%- endfor %}
)
qt_add_library(${PROJECT_NAME} SHARED ${SRC})

target_include_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}")

target_compile_definitions(${PROJECT_NAME} PUBLIC {{ application_uppercase_name }}_APPLICATION_{{ feature_uppercase_name }}_LIBRARY)

add_dependencies(${PROJECT_NAME} {{ application_name }}-contracts)
add_dependencies(${PROJECT_NAME} {{ application_name }}-contracts-cqrs-{{ feature_spinal_name }})

target_link_libraries(${PROJECT_NAME} PUBLIC {{ application_name }}-contracts)
target_link_libraries(${PROJECT_NAME} PUBLIC {{ application_name }}-contracts-cqrs-{{ feature_spinal_name }})

target_link_libraries(${PROJECT_NAME}
    PRIVATE Qt6::Core
)

if(IOS)
    install(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
endif(IOS)

if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    install(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
endif(CMAKE_SYSTEM_NAME STREQUAL "Linux")

if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    install(TARGETS ${PROJECT_NAME}
        RUNTIME DESTINATION ${BINDIR}
        LIBRARY DESTINATION ${LIBDIR})
endif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
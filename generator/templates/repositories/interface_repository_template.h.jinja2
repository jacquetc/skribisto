#pragma once

#include "{{ snake_name }}.h"
#include "{{ contracts_export_header_file }}" 
#include "interface_generic_repository.h"
#include "interface_repository.h"

namespace Contracts::Persistence
{
class {{ contracts_export }} Interface{{ name }}Repository
    : public virtual Contracts::Persistence::InterfaceGenericRepository<Domain::{{ name }}>,
      public InterfaceRepository
{
  public:
    virtual ~Interface{{ name }}Repository()
    {
    }

    {% for loader_function in loader_function_list_for_interface %}
    {{ loader_function }}
    {% endfor %}
};
} // namespace Contracts::Persistence
#define Interface{{ name }}Repository_iid "{{ inverted_app_domain }}.Contracts.Persistence.Interface{{ name }}Repository"
Q_DECLARE_INTERFACE(Contracts::Persistence::Interface{{ name }}Repository, Interface{{ name }}Repository_iid)
